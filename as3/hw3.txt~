
Q1: Does the patch improve the performance of ls or make it worse? Briefly explain.
    This patch of the ls command does improve performance. The ls command is now consistent
    in the flag order that is provided to it. If we use -aA, or -a -A, the A should override the
    -a flag which is an improvement. In terms of efficiency, the patch does implement an extra
    check, however the time increase is insignificant. 

Q2: If your company adopts this patched version of Coreutils instead of the default one, what else should you watch out for? Might this new version of Coreutils introduce other problems with your application?
    This new version could potentially cause problems with out applications if our applications were
    designed with the former performance of the flags in mind. If we did not change our application 
    we might now be overriding flags that we meant to use previously. 

Q3: What happens when this script is invoked on an empty file like /dev/null, and why?
    When we invoke the script randline.py on an empty file like /dev/null we get an error.
    This is because the script indexes with the number of lines in the file, and when the number of 
    lines is zero, there is an indexing error.

Q4: What happens when this script is invoked with Python 3 rather than Python 2, and why? (You can run Python 3 on the SEASnet hosts by using the command python3 instead of python.)
    When you run randline.py with python3 There is a syntax error. 
    File "randline.py", line 65
        except IOError as (errno, strerror):
	                      ^
			      SyntaxError: invalid syntax
    Python syntax changed between python2 and 3. The correct for should be except IOError as err:
    in python3.

Q5: What happens when your shuf.py script is invoked with Python 2 rather than Python 3, and why?
