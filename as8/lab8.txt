

I start by opening the specified directory: ~eggert/src/gnu/emacs-CS-35L
   $ cd ~eggert/src/gnu/emacs-CS-35L

1.
How much disk space is used to represent the working files in this directory? How
much is used to represent the Git repository? What file or files consume most of the
repository space and why?

The du command can be used to estimate file space usage, so I check the man pages of this
command:
   $ du -sh
509M    .
   $ du -sh .git
350M	.git

The working files in the directory use 509M, while the Git repository requires 350M of
space. The file that uses the most repository space is ./git/objects/pack. This contains
all of the files from the different commits in a compressed form, so it will be the
largest. 

////////////////////////////
The ls -l command lists out the number of bytes in each file, so I crate a short
script to find the total disk space. I use the awk command:
    $ ls -l | awk '{split($0,arr," +"); sum += arr[5]} END {print sum}'
4667501
The working files in this directory require 4,667,501 bytes.
Now I check the size of the Git repository:
   $ git count-objects -v -H
count: 0
size: 0 bytes
in-pack: 871160
packs: 1
size-pack: 333.34 MiB
prune-packable: 0
garbage: 0
size-garbage: 0 bytes

The Git repository is represented by 333.34 MiB.
///////////////////////////

2.
How many branches are local to the repository? How many are remote?
   $ git branch -a | wc -l
353
There are 353 total branches.
   $ git branch -r | wc -l
177
There are 177 remote branches, but this counts origin/HEAD which is not actually a branch,
so there are 176 remote branches. 
   $ git branch | wc -l
176
There are 176 local branches. 
    

3.
How many repositories are remote to this repository, and where are they?
   $ git remote -v
origin	https://git.savannah.gnu.org/git/emacs.git (fetch)
origin	https://git.savannah.gnu.org/git/emacs.git (push)
   $ find -d -name origin
./.git/refs/remotes/origin
./.git/logs/refs/remotes/origin
There is one repository that is remote to this repository. It is stored in
refs/remotes


4.
What are the ten local branches most recently committed to? List their names in
order of commit date, most recent first.
   $ git branch --sort=-committerdate
* master
  scratch/joaot/make-completion-at-point-function
  feature/windows-with-utils
  scratch/completion-api
  scratch/a-modest-completion-redesign-proposal
  scratch/fido-mode
  feature/gnus-select2
  feature/extend_face_id
  scratch/jit-lock-antiblink-cleaned-up
  emacs-26


5.
How many commits are in the master branch?
I use the git rev-list command to list out the commits, and I count them using --count
   $ git rev-list --count master
139583
There are 139,583 commits in the master branch.


6.
What percentage of the commits that are in any branch, are also in the master branch?
I get the total number of commits:
   $ git rev-list -all --count
143910
Now I divide to see what percentage are in the master branch:
(139583 / 143910) * 100 == 96.99%
96.99 percent of all commits are in the master branch. 


7.
Which ten people authored the most master-branch commits that were committed in the
year 2013 or later, and how many commits did each of them author during that period?
The git shortlog command is used to summarize git log outputs. Looking at the man pages,
the -s tag gives a count summary, the -n tag sorts outputs according to number of commits
per author, and the --since tag allows you to only show outputs from a certain point
onward. 
   $ git shortlog -s -n --since="2013"
  3621  Eli Zaretskii
  3505  Paul Eggert
  3406  Glenn Morris
  1806  Lars Ingebrigtsen
  1715  Stefan Monnier
  1509  Michael Albinus
   608  Dmitry Gutov
   576  Noam Postavsky
   463  Alan Mackenzie
   455  Juri Linkov


8.
Use the gitk command to visualize the commit graph in this repository. If you are
SSHing into SEASnet, youâ€™ll need to log in via ssh -X or (less securely) ssh -Y. Draw
a diagram relating the following commits to each other. You need not list every
single intervening commit individually; you can simply use ellipses.
        4ea37c2b8b0c5a68fde59770c3536195e0972217
	977cd6cb28a37744966ec62f70cf62659f6f302a
	625cee531623feddbe3174fad52c7db96ec60bb3
	5490ccc5ebf39759dfd084bbd31f464701a3e775
	0c06b93c1e467debd401eb0b3be4652fde14fa95
	820739bbb572b30b6ce45756c9960e48dca859af
	00e4e3e9d273a193620c3a4bb4914e555cb8e343
	49cd561dc62ea6b3fbedab7aef0f020733f4cf09
	abcb2e62dae6aa26308f7ac9efc89247f89cbe65
	98ac36efe4ce4bd3a0bca76fc73ce6c7abaa4371
	
I first log out and log back in using the -X tag.
   $ ssh -X classwba@lnxsrv10.seas.ucla.edu
   $ cd ~eggert/src/gnu/emacs-CS-35L
   $ gitk

..
..
..
\|
 4ea37c2b8b0c5a68fde59770c3536195e0972217
 |\
 | \
 .  . 
 .   .
 .    .
977cd6cb28a37744966ec62f70cf62659f6f302a
|         \
|          \
...        625cee531623feddbe3174fad52c7db96ec60bb3
	    |
	    |
	    ...
	    |
|	    5490ccc5ebf39759dfd084bbd31f464701a3e775
...         /    \
|	    |    |
0c06b93c1e467debd401eb0b3be4652fde14fa95
|        |           \
|        |            \
|       820739bbb...   ...
...    /  \              \
|      |  00e4e3e9...     \
|      |  |  \             \
|      | ...  ...           |
|    ...  |   |             |
|      |  |   49cd561..     |
|      |  |      /  \       |
|      |  |     /    \      |
|      |  |    /     |      |
|      |  |   /      |      |
|      |__|_ /       |      |
|     /   |         /       |
|    /    |        /        |
|___/     |       /         | 
abcb2e62...      /          |
|   |     \     /          ...
..  ..    ..  ..
|   |       \ /
|   |        |
98ac36....   |              |
|           ...            ...
|            |              |            
